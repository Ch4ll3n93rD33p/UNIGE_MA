#if !canImport(ObjectiveC)
import XCTest

extension BoolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__BoolTests = [
        ("testBoolAnd", testBoolAnd),
        ("testBoolEq", testBoolEq),
        ("testBoolNot", testBoolNot),
        ("testBoolOr", testBoolOr),
    ]
}

extension IntTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__IntTests = [
        ("testIntAbs", testIntAbs),
        ("testIntAdd", testIntAdd),
        ("testIntDiv", testIntDiv),
        ("testIntEq", testIntEq),
        ("testIntGt", testIntGt),
        ("testIntLt", testIntLt),
        ("testIntNormalize", testIntNormalize),
        ("testIntSign", testIntSign),
        ("testIntSub", testIntSub),
    ]
}

extension MultiSetTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__MultiSetTests = [
        ("testMultiSetConcat", testMultiSetConcat),
        ("testMultiSetContains", testMultiSetContains),
        ("testMultiSetEq", testMultiSetEq),
        ("testMultiSetRemoveAll", testMultiSetRemoveAll),
        ("testMultiSetRemoveOne", testMultiSetRemoveOne),
    ]
}

extension NatProofTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NatProofTests = [
        ("testInductiveProof0", testInductiveProof0),
        ("testInductiveProof1", testInductiveProof1),
        ("testProof0", testProof0),
        ("testProof1", testProof1),
        ("testProof2", testProof2),
    ]
}

extension NatTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__NatTests = [
        ("testNatAdd", testNatAdd),
        ("testNatDiv", testNatDiv),
        ("testNatEq", testNatEq),
        ("testNatGcd", testNatGcd),
        ("testNatGt", testNatGt),
        ("testNatLt", testNatLt),
        ("testNatMod", testNatMod),
        ("testNatMul", testNatMul),
        ("testNatSub", testNatSub),
    ]
}

extension ProofsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ProofsTests = [
        ("testEquationalProof", testEquationalProof),
        ("testProofReflexivity", testProofReflexivity),
        ("testProofSubstitution", testProofSubstitution),
        ("testProofSubstitutivity", testProofSubstitutivity),
        ("testProofSymmetry", testProofSymmetry),
        ("testProofTransitivity", testProofTransitivity),
    ]
}

extension SequenceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SequenceTests = [
        ("testSequenceGetAt", testSequenceGetAt),
        ("testSequencePush", testSequencePush),
        ("testSequenceSetAt", testSequenceSetAt),
        ("testSequenceSize", testSequenceSize),
    ]
}

extension SetTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__SetTests = [
        ("testSetContains", testSetContains),
        ("testSetDifference", testSetDifference),
        ("testSetEqual", testSetEqual),
        ("testSetInsert", testSetInsert),
        ("testSetIntersection", testSetIntersection),
        ("testSetRemoveOne", testSetRemoveOne),
        ("testSetSize", testSetSize),
        ("testSetSubSet", testSetSubSet),
        ("testSetUnion", testSetUnion),
    ]
}

extension StackProofsTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StackProofsTests = [
        ("testProof0", testProof0),
        ("testProof1", testProof1),
        ("testProof2", testProof2),
        ("testProof3", testProof3),
    ]
}

extension StackTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StackTests = [
        ("testStackN", testStackN),
        ("testStackPop", testStackPop),
        ("testStackSize", testStackSize),
        ("testStackTop", testStackTop),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(BoolTests.__allTests__BoolTests),
        testCase(IntTests.__allTests__IntTests),
        testCase(MultiSetTests.__allTests__MultiSetTests),
        testCase(NatProofTests.__allTests__NatProofTests),
        testCase(NatTests.__allTests__NatTests),
        testCase(ProofsTests.__allTests__ProofsTests),
        testCase(SequenceTests.__allTests__SequenceTests),
        testCase(SetTests.__allTests__SetTests),
        testCase(StackProofsTests.__allTests__StackProofsTests),
        testCase(StackTests.__allTests__StackTests),
    ]
}
#endif
